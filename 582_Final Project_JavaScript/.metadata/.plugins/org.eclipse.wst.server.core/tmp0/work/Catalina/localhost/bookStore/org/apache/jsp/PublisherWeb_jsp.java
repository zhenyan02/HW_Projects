/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-11-28 20:28:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import finalproject.bookstore.*;
import java.util.*;

public final class PublisherWeb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"css/bootstrap.css\" rel=\"stylesheet\"/>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body background=\"back13.jpg\">\r\n");
      out.write("\t<h1>Publisher</h1>\r\n");
      out.write("\r\n");

	SellerDAO dao = new SellerDAO();
    BranchDAO daoo = new BranchDAO();
	
	//controller{
	String action = request.getParameter("action");
    String name = request.getParameter("name");
    String price = request.getParameter("price");
    String id = request.getParameter("id");
	String action2 = request.getParameter("action2");
    String nameBuy = request.getParameter("nameBuy");
    String priceBuy = request.getParameter("priceBuy");
    String quantityBuy = request.getParameter("quantityBuy");
    String id2 = request.getParameter("id2");
    Seller app = new Seller();
    Branch apB = new Branch();
    
    /*
    			statement.setDouble(1, buyer.getSaleprice());
			statement.setInt(2, buyer.getQuantity());
			statement.setString(3, buyer.getName());*/

	//saleprice, quantity, name
    //Seller aXX2 = new Seller();
    //Seller aXX1 = new Seller();
    
    if("createSeller".equals(action)){
    	int idInt = Integer.parseInt(id);
    	double priceD = Double.parseDouble(price);
        app = new Seller(idInt, name, priceD); 
    	dao.create(app);
    }else if("createBuyer".equals(action)){
    	int quantityBuyInt = Integer.parseInt(quantityBuy);
    	double priceBuyD = Double.parseDouble(priceBuy);
        apB = new Branch(priceBuyD, quantityBuyInt, nameBuy,0); 
    	daoo.create(apB);
    }else if("remove".equals(action)){
    	//String nameString = String.parseString(id);
    	dao.remove(name);
    }else if("select".equals(action)){
    	//int idInt = Integer.parseInt(id);
    	app = dao.selectOne(name);
    }else if("update".equals(action)){
    	int idInt = Integer.parseInt(id);
    	double priceD = Double.parseDouble(price);
    	app = new Seller(idInt, name, priceD); 
    	dao.update(name, app);
    }else if("create2".equals(action)){
    	int idInt = Integer.parseInt(id);
    	double priceD = Double.parseDouble(price);
        app = new Seller(idInt, name, priceD); 
    	int quantityBuyInt = Integer.parseInt(quantityBuy);
    	double priceBuyD = Double.parseDouble(priceBuy);
        apB = new Branch(priceBuyD, quantityBuyInt, nameBuy,0 ); 
		dao.buyersellerInsert(app,apB);
    }else if("delete2".equals(action)){
    	//List<Seller> multiDelete = new ArrayList<Seller>();
    	//multiDelete.add(request.getParameterValues("ckbdelete"));
	    //dao.listDelete(multiDelete);
			System.out.println(request.getParameterValues("ckbdelete"));

    }
    	
    	
	//Seller app1 = new Seller("xxxyxx", 8.99);
	//dao.create(app1);
	
	
	List<Seller> sellers = dao.selectAll();
	 //}

      out.write(" \r\n");
      out.write("<form action=\"PublisherWeb.jsp\">\r\n");
      out.write("\t<table class= \"table\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>Book ID for publisher:</td>\r\n");
      out.write("\t\t\t<td>Book name for publisher:</td>\r\n");
      out.write("\t\t\t<td>Price for publisher:</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\t\r\n");
      out.write("\t\t\t<td><input name=\"id\" class=\"form-control\" value=\"");
      out.print( app.getId());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td><input name=\"name\" class=\"form-control\" value=\"");
      out.print( app.getName());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td><input name=\"price\" class=\"form-control\" value=\"");
      out.print( app.getPrice());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-success\" name=\"action\" value=\"createSeller\">\r\n");
      out.write("\t\t\t\t\tAdd Publisher\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\" name=\"action\" value=\"update\">\r\n");
      out.write("\t\t\t\t\tUpdate\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>Price for branch store&customer:</td>\r\n");
      out.write("\t\t\t<td>Stock for branch store&customer:</td>\r\n");
      out.write("\t\t\t<td>Name for branch store&customer:</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t<tr>\t\t\t\r\n");
      out.write("\t\t\t<td><input name=\"priceBuy\" class=\"form-control\" value=\"");
      out.print( apB.getSaleprice());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td><input name=\"quantityBuy\" class=\"form-control\" value=\"");
      out.print( apB.getStock());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td><input name=\"nameBuy\" class=\"form-control\" value=\"");
      out.print( apB.getName());
      out.write("\"/></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-success\" name=\"action\" value=\"createBuyer\">\r\n");
      out.write("\t\t\t\t\tAdd Branch Store\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-success\" name=\"action\" value=\"create2\">\r\n");
      out.write("\t\t\t\t\tAdd Publisher and Branch Store\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<tr><td></td>\t\r\n");
      out.write("\t\t\t<td>id for publisher:</td>\r\n");
      out.write("\t\t\t<td>name for publisher:</td>\r\n");
      out.write("\t\t\t<td>price for publisher:</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
 for(Seller ap:sellers){	
	
	

      out.write("  <tr>\r\n");
      out.write("\t\t<td><input name=\"ckbdelete\" type=\"checkbox\" value=\"");
      out.print( ap.getName());
      out.write("\"/></td>\r\n");
      out.write("\t\t<td>");
      out.print( ap.getId() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print( ap.getName() );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print( ap.getPrice() );
      out.write("</td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<a class=\"btn btn-danger\" href=\"PublisherWeb.jsp?action=remove&name=");
      out.print( ap.getName() );
      out.write("\">\r\n");
      out.write("\t\t\t\tDelete\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t\t<a class=\"btn btn-warning\" href=\"PublisherWeb.jsp?action=select&name=");
      out.print( ap.getName() );
      out.write("\">\r\n");
      out.write("\t\t\t\tSelect\r\n");
      out.write("\t\t\t</a>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
 
	}

      out.write("\t\r\n");
      out.write("   </table>\r\n");
      out.write("</form>\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-success\" name=\"action\" value=\"delete2\">\r\n");
      out.write("\t\t\t\t\tDelete All Selected\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
